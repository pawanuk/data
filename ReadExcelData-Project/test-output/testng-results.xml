<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="31" ignored="0" total="150" passed="119">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1832" started-at="2019-11-10T15:01:45Z" finished-at="2019-11-10T15:01:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1832" started-at="2019-11-10T15:01:45Z" finished-at="2019-11-10T15:01:47Z">
      <class name="com.testcases.DataDrivenExcel">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="setUp" is-config="true" duration-ms="166" started-at="2019-11-10T15:01:45Z" finished-at="2019-11-10T15:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="19" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-8.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=BHP Shooting time not exceeding CWD, Meal Curltailment Pay=0.0, Camera Overtime Pay=0.0, 7th Day Pay=0.0, TestCaseId=TC001, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-1.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-9.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=BHP Shooting time not exceeding SWD, Meal Curltailment Pay=0.0, Camera Overtime Pay=0.0, 7th Day Pay=0.0, TestCaseId=TC002, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-2.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-10.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=BHP Shooting time not exceeding SCWD, Meal Curltailment Pay=0.0, Camera Overtime Pay=0.0, 7th Day Pay=0.0, TestCaseId=TC003, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-3.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-11.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime, Meal Curltailment Pay=0.0, Camera Overtime Pay=-0.6400000000000006, 7th Day Pay=0.0, TestCaseId=TC004, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-4.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-12.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime, Meal Curltailment Pay=0.0, Camera Overtime Pay=-1.6400000000000006, 7th Day Pay=0.0, TestCaseId=TC005, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-5.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-13.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime, Meal Curltailment Pay=0.0, Camera Overtime Pay=-1.6400000000000006, 7th Day Pay=0.0, TestCaseId=TC006, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-6.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-14.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime minimum rate cap >=25 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=-14.0, 7th Day Pay=0.0, TestCaseId=TC007, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-7.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-15.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime minimum rate cap >=25 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=-14.0, 7th Day Pay=0.0, TestCaseId=TC008, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-8.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-16.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime minimum rate cap >=25 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=-15.0, 7th Day Pay=0.0, TestCaseId=TC009, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-9.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-17.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime maximum rate cap <=81.82 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=41.81999999999999, 7th Day Pay=0.0, TestCaseId=TC010, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-10.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-18.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime maximum rate cap <=81.82 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=40.81999999999999, 7th Day Pay=0.0, TestCaseId=TC011, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-11.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-19.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime maximum rate cap <=81.82 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=40.81999999999999, 7th Day Pay=0.0, TestCaseId=TC012, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-12.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-20.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera No grace period-Post wrap Time in Global defaults to be ignored, Meal Curltailment Pay=0.0, Camera Overtime Pay=-32.91, 7th Day Pay=0.0, TestCaseId=TC013, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-13.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-21.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera No grace period-Post wrap Time in Global defaults to be ignored, Meal Curltailment Pay=0.0, Camera Overtime Pay=-32.91, 7th Day Pay=0.0, TestCaseId=TC014, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-14.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="8" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-22.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=-33.91, 7th Day Pay=0.0, TestCaseId=TC015, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-15.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-23.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=-15.73, 7th Day Pay=0.0, TestCaseId=TC016, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-16.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-24.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=-16.73, 7th Day Pay=0.0, TestCaseId=TC017, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-17.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-25.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=-34.91, 7th Day Pay=0.0, TestCaseId=TC018, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-18.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-26.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=18.630000000000003, 7th Day Pay=0.0, TestCaseId=TC019, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-19.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="5" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-27.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=18.630000000000003, 7th Day Pay=0.0, TestCaseId=TC020, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-20.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-28.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtimefrom 3rd hour Overtime will not be prorated, Meal Curltailment Pay=0.0, Camera Overtime Pay=-0.5499999999999972, 7th Day Pay=0.0, TestCaseId=TC021, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-21.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-29.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtimefrom 3rd hour Overtime will not be prorated, Meal Curltailment Pay=0.0, Camera Overtime Pay=63.08, 7th Day Pay=0.0, TestCaseId=TC022, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-22.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-30.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtimefrom 3rd hour Overtime will not be prorated, Meal Curltailment Pay=0.0, Camera Overtime Pay=62.08, 7th Day Pay=0.0, TestCaseId=TC023, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-23.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-31.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime, Meal Curltailment Pay=0.0, Camera Overtime Pay=25.72, 7th Day Pay=0.0, TestCaseId=TC024, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-24.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="4" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-32.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime minimum rate cap >=25 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=-48.0, 7th Day Pay=0.0, TestCaseId=TC025, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-25.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-33.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera overtime maximum rate cap <=81.82 per hour, Meal Curltailment Pay=0.0, Camera Overtime Pay=-11.64, 7th Day Pay=0.0, TestCaseId=TC026, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-26.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-34.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera No grace period-Post wrap Time in Global defaults to be ignored, Meal Curltailment Pay=0.0, Camera Overtime Pay=-49.0, 7th Day Pay=0.0, TestCaseId=TC027, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-27.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-35.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=-49.0, 7th Day Pay=0.0, TestCaseId=TC028, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-28.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-36.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtime First 2 hours paid in 15 minute Increments, Meal Curltailment Pay=0.0, Camera Overtime Pay=-50.0, 7th Day Pay=0.0, TestCaseId=TC029, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-29.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-37.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Camera Overtimefrom 3rd hour Overtime will not be prorated, Meal Curltailment Pay=0.0, Camera Overtime Pay=-50.0, 7th Day Pay=0.0, TestCaseId=TC030, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-30.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-38.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non camera OT adjusted for prep and wrap provision of clause 3.2, Meal Curltailment Pay=0.0, Camera Overtime Pay=-51.0, 7th Day Pay=0.0, TestCaseId=TC031, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-31.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-39.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non camera OT adjusted for prep and wrap provision of clause 3.2, Meal Curltailment Pay=0.0, Camera Overtime Pay=-51.0, 7th Day Pay=0.0, TestCaseId=TC032, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-32.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-40.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non camera OT adjusted for prep and wrap provision of clause 3.2, Meal Curltailment Pay=0.0, Camera Overtime Pay=-52.0, 7th Day Pay=0.0, TestCaseId=TC033, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-33.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-41.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non camera OT adjusted for prep and wrap provision of clause 3.2, Meal Curltailment Pay=0.0, Camera Overtime Pay=-27.0, 7th Day Pay=0.0, TestCaseId=TC034, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-34.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-42.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera overtime payable in 30min increment, Meal Curltailment Pay=0.0, Camera Overtime Pay=28.819999999999993, 7th Day Pay=0.0, TestCaseId=TC035, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-35.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-43.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera overtime payable in 30min increment, Meal Curltailment Pay=0.0, Camera Overtime Pay=-46.75, 7th Day Pay=0.0, TestCaseId=TC036, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-36.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-44.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera overtime payable in 30min increment, Meal Curltailment Pay=0.0, Camera Overtime Pay=-35.82, 7th Day Pay=0.0, TestCaseId=TC037, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-37.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-45.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera overtime payable in 30min increment, Meal Curltailment Pay=0.0, Camera Overtime Pay=-35.82, 7th Day Pay=0.0, TestCaseId=TC038, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-38.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-46.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=54.08, 7th Day Pay=0.0, TestCaseId=TC039, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-39.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-47.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-55.0, 7th Day Pay=0.0, TestCaseId=TC040, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-40.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-48.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-56.0, 7th Day Pay=0.0, TestCaseId=TC041, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-41.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-49.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-56.0, 7th Day Pay=0.0, TestCaseId=TC042, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-42.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-50.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-57.0, 7th Day Pay=0.0, TestCaseId=TC043, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-43.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-51.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-57.0, 7th Day Pay=0.0, TestCaseId=TC044, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-16.73}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-52.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-58.0, 7th Day Pay=0.0, TestCaseId=TC045, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-17.73}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-53.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-58.0, 7th Day Pay=0.0, TestCaseId=TC046, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-46.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-54.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=Non Camera overtime payable in 30min increment, Meal Curltailment Pay=0.0, Camera Overtime Pay=-59.0, 7th Day Pay=0.0, TestCaseId=TC047, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-19.73}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-55.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=Non Camera overtime payable in 30min increment, Meal Curltailment Pay=0.0, Camera Overtime Pay=-59.0, 7th Day Pay=0.0, TestCaseId=TC048, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-14.670000000000002}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-56.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-60.0, 7th Day Pay=0.0, TestCaseId=TC049, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-49.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-57.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-60.0, 7th Day Pay=0.0, TestCaseId=TC050, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=31.819999999999993}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="8" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-58.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-61.0, 7th Day Pay=0.0, TestCaseId=TC051, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=30.819999999999993}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-59.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-61.0, 7th Day Pay=0.0, TestCaseId=TC052, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-52.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-60.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-62.0, 7th Day Pay=0.0, TestCaseId=TC053, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-53.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-61.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=6DP Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-62.0, 7th Day Pay=0.0, TestCaseId=TC054, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=27.819999999999993}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-62.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-63.0, 7th Day Pay=0.0, TestCaseId=TC055, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-55.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-63.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-63.0, 7th Day Pay=0.0, TestCaseId=TC056, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-56.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-64.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=7DP Non Camera max OT rate 81.82/hr, Meal Curltailment Pay=0.0, Camera Overtime Pay=-64.0, 7th Day Pay=0.0, TestCaseId=TC057, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=24.819999999999993}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-65.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-64.0, 7th Day Pay=0.0, TestCaseId=TC058, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-58.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-66.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-65.0, 7th Day Pay=0.0, TestCaseId=TC059, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-59.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-67.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-65.0, 7th Day Pay=0.0, TestCaseId=TC060, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-46.36}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-68.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-66.0, 7th Day Pay=0.0, TestCaseId=TC061, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-47.36}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-69.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-66.0, 7th Day Pay=0.0, TestCaseId=TC062, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-62.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-70.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=COT Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-67.0, 7th Day Pay=0.0, TestCaseId=TC063, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-49.36}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-71.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-67.0, 7th Day Pay=0.0, TestCaseId=TC064, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-64.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-72.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-68.0, 7th Day Pay=0.0, TestCaseId=TC065, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-65.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-73.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=NWP Non Camera OT with daily salary of 100, Meal Curltailment Pay=0.0, Camera Overtime Pay=-68.0, 7th Day Pay=0.0, TestCaseId=TC066, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-49.33}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-74.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-69.0, 7th Day Pay=0.0, TestCaseId=TC067, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-67.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-75.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-69.0, 7th Day Pay=0.0, TestCaseId=TC068, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-68.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-76.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal start at or before 6 hours from unit call, Meal Curltailment Pay=0.0, Camera Overtime Pay=-70.0, 7th Day Pay=0.0, TestCaseId=TC069, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-69.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-77.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal start at or before 6 hours from unit call, Meal Curltailment Pay=0.0, Camera Overtime Pay=-70.0, 7th Day Pay=0.0, TestCaseId=TC070, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-42.730000000000004}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-78.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal delay paid in 15 min increment non shooting crew, Meal Curltailment Pay=0.0, Camera Overtime Pay=-71.0, 7th Day Pay=0.0, TestCaseId=TC071, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-71.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-79.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal delay paid in 15 min increment non shooting crew, Meal Curltailment Pay=0.0, Camera Overtime Pay=-71.0, 7th Day Pay=0.0, TestCaseId=TC072, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-72.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-80.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal delay paid in 15 min increment shooting crew, Meal Curltailment Pay=0.0, Camera Overtime Pay=-72.0, 7th Day Pay=0.0, TestCaseId=TC073, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-73.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-81.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal delay paid in 15 min increment shooting crew, Meal Curltailment Pay=0.0, Camera Overtime Pay=-72.0, 7th Day Pay=0.0, TestCaseId=TC074, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-74.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-82.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-73.0, 7th Day Pay=0.0, TestCaseId=TC075, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-75.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-83.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment with delay ,Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-73.0, 7th Day Pay=0.0, TestCaseId=TC076, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-76.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-84.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-74.0, 7th Day Pay=0.0, TestCaseId=TC077, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-77.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-85.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-74.0, 7th Day Pay=0.0, TestCaseId=TC078, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-78.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-86.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-75.0, 7th Day Pay=0.0, TestCaseId=TC079, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-79.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-87.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-75.0, 7th Day Pay=0.0, TestCaseId=TC080, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-80.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-88.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Shooting crew paid in 15 min increment at camera OT rate, Meal Curltailment Pay=0.0, Camera Overtime Pay=-76.0, 7th Day Pay=0.0, TestCaseId=TC081, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-81.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-89.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-76.0, 7th Day Pay=0.0, TestCaseId=TC082, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-82.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-90.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-77.0, 7th Day Pay=0.0, TestCaseId=TC083, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-83.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-91.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-77.0, 7th Day Pay=0.0, TestCaseId=TC084, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-84.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-92.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-78.0, 7th Day Pay=0.0, TestCaseId=TC085, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-85.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-93.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-78.0, 7th Day Pay=0.0, TestCaseId=TC086, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-86.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-94.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-79.0, 7th Day Pay=0.0, TestCaseId=TC087, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-87.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-95.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment and delay for Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-79.0, 7th Day Pay=0.0, TestCaseId=TC088, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-88.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-96.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment and delay Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-80.0, 7th Day Pay=0.0, TestCaseId=TC089, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-89.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-97.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-80.0, 7th Day Pay=0.0, TestCaseId=TC090, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-90.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="8" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-98.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=NWP Pre-dawn call-call before 5am paid at 2T SWD , Meal Curltailment Pay=0.0, Camera Overtime Pay=-44.64, 7th Day Pay=0.0, TestCaseId=TC091, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-91.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-99.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-81.0, 7th Day Pay=0.0, TestCaseId=TC092, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-92.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-100.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-82.0, 7th Day Pay=0.0, TestCaseId=TC093, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-93.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-101.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-82.0, 7th Day Pay=0.0, TestCaseId=TC094, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-94.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-102.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-83.0, 7th Day Pay=0.0, TestCaseId=TC095, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-95.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-103.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-83.0, 7th Day Pay=0.0, TestCaseId=TC096, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-96.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-104.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-84.0, 7th Day Pay=0.0, TestCaseId=TC097, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-97.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="3" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-105.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-84.0, 7th Day Pay=0.0, TestCaseId=TC098, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-98.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-106.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-85.0, 7th Day Pay=0.0, TestCaseId=TC099, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-99.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-107.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-85.0, 7th Day Pay=0.0, TestCaseId=TC100, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-100.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-108.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-86.0, 7th Day Pay=0.0, TestCaseId=TC101, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-101.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-109.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment and delay for Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-86.0, 7th Day Pay=0.0, TestCaseId=TC102, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-102.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-110.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=, Meal Curltailment Pay=0.0, Camera Overtime Pay=-87.0, 7th Day Pay=0.0, TestCaseId=TC103, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-103.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-2.0, 6th Day Pay=-111.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=NWP Night work for shooting hours beyond midnight and 3 am paid 20 SWD, Meal Curltailment Pay=0.0, Camera Overtime Pay=94.80000000000001, 7th Day Pay=0.0, TestCaseId=TC104, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-104.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-112.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=1, Meal Curltailment Pay=0.0, Camera Overtime Pay=-88.0, 7th Day Pay=0.0, TestCaseId=TC105, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-105.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-113.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=MCP Meal curtailment and delay Non Shooting crew paid in 30 min increment at 1.5T, Meal Curltailment Pay=0.0, Camera Overtime Pay=-88.0, 7th Day Pay=0.0, TestCaseId=TC106, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-106.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Night Work Premium=-22.0, 6th Day Pay=-114.0, Broken Turnaround Pay=0.0, Travel Pay=0.0, Meal Delay Pay=0.0, Test Case Description=TRP Pre Dawn call before 5am paid at 2T SCWD, Meal Curltailment Pay=0.0, Camera Overtime Pay=56.44, 7th Day Pay=0.0, TestCaseId=TC107, Post Wrap Overtime Pay=0.0, Pre Dawn Pay=0.0, Pre Call Overtime Pay=-107.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test4(DataDrivenExcel.java:31)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="FAIL" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test4(DataDrivenExcel.java:31)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test4(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test4" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForRough" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test4(DataDrivenExcel.java:31)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="0" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.testcases.DataDrivenExcel.test5(DataDrivenExcel.java:57)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="19" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=197.0, TC016=198.0, TC015=199.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=796.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=-103.0, TC102=0.0, TC008=-102.0, TC101=0.0, TC007=-101.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=-1.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Bank hoilday Day Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=-28.0, TC027=-27.0, TC026=-26.0, TC025=-25.0, TC089=-89.0, TC024=-24.0, TC088=-88.0, TC023=-23.0, TC087=-87.0, TC022=-22.0, TC086=-86.0, TC021=-21.0, TC085=-85.0, TC020=-20.0, TC084=-84.0, TC083=-83.0, TC082=-82.0, TC081=-81.0, TC080=-80.0, TC019=-19.0, TC018=-18.0, TC017=-17.0, TC016=-16.0, TC015=-15.0, TC079=-79.0, TC014=-14.0, TC078=-78.0, TC013=-13.0, TC077=-77.0, TC012=-12.0, TC076=-76.0, TC011=-11.0, TC075=-75.0, TC010=-10.0, TC074=-74.0, TC073=-73.0, TC072=-72.0, TC071=-71.0, TC070=-42.730000000000004, TC107=-107.0, TC106=-106.0, TC105=-105.0, TC104=-104.0, TC103=-103.0, TC009=-9.0, TC102=-102.0, TC008=-8.0, TC101=-101.0, TC007=-7.0, TC100=-100.0, TC006=-6.0, TC005=-5.0, TC004=-4.0, TC069=-69.0, TC003=-3.0, TC068=-68.0, TC002=-2.0, TC067=-67.0, TC001=-1.0, TC066=-49.33, TC065=-65.0, TC064=-64.0, TC063=-49.36, TC062=-62.0, TestCaseId=Pre Call Overtime Pay, TC061=-47.36, TC060=-46.36, TC059=-59.0, TC058=-58.0, TC057=24.819999999999993, TC056=-56.0, TC055=-55.0, TC054=27.819999999999993, TC053=-53.0, TC052=-52.0, TC051=30.819999999999993, TC050=31.819999999999993, TC049=-49.0, TC048=-14.670000000000002, TC047=-19.73, TC046=-46.0, TC045=-17.73, TC044=-16.73, TC043=-43.0, TC042=-42.0, TC041=-41.0, TC040=-40.0, TC039=-39.0, TC038=-38.0, TC037=-37.0, TC036=-36.0, TC035=-35.0, TC099=-99.0, TC034=-34.0, TC098=-98.0, TC033=-33.0, TC097=-97.0, TC032=-32.0, TC096=-96.0, TC031=-31.0, TC095=-95.0, TC030=-30.0, TC094=-94.0, TC093=-93.0, TC092=-92.0, TC091=-91.0, TC090=-90.0, TC029=-29.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Post Wrap Overtime Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=-49.0, TC027=-49.0, TC026=-11.64, TC025=-48.0, TC089=-80.0, TC024=25.72, TC088=-79.0, TC023=62.08, TC087=-79.0, TC022=63.08, TC086=-78.0, TC021=-0.5499999999999972, TC085=-78.0, TC020=18.630000000000003, TC084=-77.0, TC083=-77.0, TC082=-76.0, TC081=-76.0, TC080=-75.0, TC019=18.630000000000003, TC018=-34.91, TC017=-16.73, TC016=-15.73, TC015=-33.91, TC079=-75.0, TC014=-32.91, TC078=-74.0, TC013=-32.91, TC077=-74.0, TC012=40.81999999999999, TC076=-73.0, TC011=40.81999999999999, TC075=-73.0, TC010=41.81999999999999, TC074=-72.0, TC073=-72.0, TC072=-71.0, TC071=-71.0, TC070=-70.0, TC107=56.44, TC106=-88.0, TC105=-88.0, TC104=94.80000000000001, TC103=-87.0, TC009=-15.0, TC102=-86.0, TC008=-14.0, TC101=-86.0, TC007=-14.0, TC100=-85.0, TC006=-1.6400000000000006, TC005=-1.6400000000000006, TC004=-0.6400000000000006, TC069=-70.0, TC003=0.0, TC068=-69.0, TC002=0.0, TC067=-69.0, TC001=0.0, TC066=-68.0, TC065=-68.0, TC064=-67.0, TC063=-67.0, TC062=-66.0, TestCaseId=Camera Overtime Pay, TC061=-66.0, TC060=-65.0, TC059=-65.0, TC058=-64.0, TC057=-64.0, TC056=-63.0, TC055=-63.0, TC054=-62.0, TC053=-62.0, TC052=-61.0, TC051=-61.0, TC050=-60.0, TC049=-60.0, TC048=-59.0, TC047=-59.0, TC046=-58.0, TC045=-58.0, TC044=-57.0, TC043=-57.0, TC042=-56.0, TC041=-56.0, TC040=-55.0, TC039=54.08, TC038=-35.82, TC037=-35.82, TC036=-46.75, TC035=28.819999999999993, TC099=-85.0, TC034=-27.0, TC098=-84.0, TC033=-52.0, TC097=-84.0, TC032=-51.0, TC096=-83.0, TC031=-51.0, TC095=-83.0, TC030=-50.0, TC094=-82.0, TC093=-82.0, TC092=-81.0, TC091=-44.64, TC090=-80.0, TC029=-50.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Broken Turnaround Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Meal Delay Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Meal Curltailment Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=-35.0, TC027=-34.0, TC026=-33.0, TC025=-32.0, TC089=-96.0, TC024=-31.0, TC088=-95.0, TC023=-30.0, TC087=-94.0, TC022=-29.0, TC086=-93.0, TC021=-28.0, TC085=-92.0, TC020=-27.0, TC084=-91.0, TC083=-90.0, TC082=-89.0, TC081=-88.0, TC080=-87.0, TC019=-26.0, TC018=-25.0, TC017=-24.0, TC016=-23.0, TC015=-22.0, TC079=-86.0, TC014=-21.0, TC078=-85.0, TC013=-20.0, TC077=-84.0, TC012=-19.0, TC076=-83.0, TC011=-18.0, TC075=-82.0, TC010=-17.0, TC074=-81.0, TC073=-80.0, TC072=-79.0, TC071=-78.0, TC070=-77.0, TC107=-114.0, TC106=-113.0, TC105=-112.0, TC104=-111.0, TC103=-110.0, TC009=-16.0, TC102=-109.0, TC008=-15.0, TC101=-108.0, TC007=-14.0, TC100=-107.0, TC006=-13.0, TC005=-12.0, TC004=-11.0, TC069=-76.0, TC003=-10.0, TC068=-75.0, TC002=-9.0, TC067=-74.0, TC001=-8.0, TC066=-73.0, TC065=-72.0, TC064=-71.0, TC063=-70.0, TC062=-69.0, TestCaseId=6th Day Pay, TC061=-68.0, TC060=-67.0, TC059=-66.0, TC058=-65.0, TC057=-64.0, TC056=-63.0, TC055=-62.0, TC054=-61.0, TC053=-60.0, TC052=-59.0, TC051=-58.0, TC050=-57.0, TC049=-56.0, TC048=-55.0, TC047=-54.0, TC046=-53.0, TC045=-52.0, TC044=-51.0, TC043=-50.0, TC042=-49.0, TC041=-48.0, TC040=-47.0, TC039=-46.0, TC038=-45.0, TC037=-44.0, TC036=-43.0, TC035=-42.0, TC099=-106.0, TC034=-41.0, TC098=-105.0, TC033=-40.0, TC097=-104.0, TC032=-39.0, TC096=-103.0, TC031=-38.0, TC095=-102.0, TC030=-37.0, TC094=-101.0, TC093=-100.0, TC092=-99.0, TC091=-98.0, TC090=-97.0, TC029=-36.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=7th Day Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Pre Dawn Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="1" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=-22.0, TC027=-22.0, TC026=-22.0, TC025=-22.0, TC089=-22.0, TC024=-22.0, TC088=-22.0, TC023=-22.0, TC087=-22.0, TC022=-22.0, TC086=-22.0, TC021=-22.0, TC085=-22.0, TC020=-22.0, TC084=-22.0, TC083=-22.0, TC082=-22.0, TC081=-22.0, TC080=-22.0, TC019=-22.0, TC018=-22.0, TC017=-22.0, TC016=-22.0, TC015=-22.0, TC079=-22.0, TC014=-22.0, TC078=-22.0, TC013=-22.0, TC077=-22.0, TC012=-22.0, TC076=-22.0, TC011=-22.0, TC075=-22.0, TC010=-22.0, TC074=-22.0, TC073=-22.0, TC072=-22.0, TC071=-22.0, TC070=-22.0, TC107=-22.0, TC106=-22.0, TC105=-22.0, TC104=-2.0, TC103=-22.0, TC009=-22.0, TC102=-22.0, TC008=-22.0, TC101=-22.0, TC007=-22.0, TC100=-22.0, TC006=-22.0, TC005=-22.0, TC004=-22.0, TC069=-22.0, TC003=-22.0, TC068=-22.0, TC002=-22.0, TC067=-22.0, TC001=-22.0, TC066=-22.0, TC065=-22.0, TC064=-22.0, TC063=-22.0, TC062=-22.0, TestCaseId=Night Work Premium, TC061=-22.0, TC060=-22.0, TC059=-22.0, TC058=-22.0, TC057=-22.0, TC056=-22.0, TC055=-22.0, TC054=-22.0, TC053=-22.0, TC052=-22.0, TC051=-22.0, TC050=-22.0, TC049=-22.0, TC048=-22.0, TC047=-22.0, TC046=-22.0, TC045=-22.0, TC044=-22.0, TC043=-22.0, TC042=-22.0, TC041=-22.0, TC040=-22.0, TC039=-22.0, TC038=-22.0, TC037=-22.0, TC036=-22.0, TC035=-22.0, TC099=-22.0, TC034=-22.0, TC098=-22.0, TC033=-22.0, TC097=-22.0, TC032=-22.0, TC096=-22.0, TC031=-22.0, TC095=-22.0, TC030=-22.0, TC094=-22.0, TC093=-22.0, TC092=-22.0, TC091=-22.0, TC090=-22.0, TC029=-22.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5(java.util.Hashtable)[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="test5" duration-ms="2" started-at="2019-11-10T15:01:47Z" data-provider="dataProviderForIterationsForColumns" finished-at="2019-11-10T15:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC028=0.0, TC027=0.0, TC026=0.0, TC025=0.0, TC089=0.0, TC024=0.0, TC088=0.0, TC023=0.0, TC087=0.0, TC022=0.0, TC086=0.0, TC021=0.0, TC085=0.0, TC020=0.0, TC084=0.0, TC083=0.0, TC082=0.0, TC081=0.0, TC080=0.0, TC019=0.0, TC018=0.0, TC017=0.0, TC016=0.0, TC015=0.0, TC079=0.0, TC014=0.0, TC078=0.0, TC013=0.0, TC077=0.0, TC012=0.0, TC076=0.0, TC011=0.0, TC075=0.0, TC010=0.0, TC074=0.0, TC073=0.0, TC072=0.0, TC071=0.0, TC070=0.0, TC107=0.0, TC106=0.0, TC105=0.0, TC104=0.0, TC103=0.0, TC009=0.0, TC102=0.0, TC008=0.0, TC101=0.0, TC007=0.0, TC100=0.0, TC006=0.0, TC005=0.0, TC004=0.0, TC069=0.0, TC003=0.0, TC068=0.0, TC002=0.0, TC067=0.0, TC001=0.0, TC066=0.0, TC065=0.0, TC064=0.0, TC063=0.0, TC062=0.0, TestCaseId=Travel Pay, TC061=0.0, TC060=0.0, TC059=0.0, TC058=0.0, TC057=0.0, TC056=0.0, TC055=0.0, TC054=0.0, TC053=0.0, TC052=0.0, TC051=0.0, TC050=0.0, TC049=0.0, TC048=0.0, TC047=0.0, TC046=0.0, TC045=0.0, TC044=0.0, TC043=0.0, TC042=0.0, TC041=0.0, TC040=0.0, TC039=0.0, TC038=0.0, TC037=0.0, TC036=0.0, TC035=0.0, TC099=0.0, TC034=0.0, TC098=0.0, TC033=0.0, TC097=0.0, TC032=0.0, TC096=0.0, TC031=0.0, TC095=0.0, TC030=0.0, TC094=0.0, TC093=0.0, TC092=0.0, TC091=0.0, TC090=0.0, TC029=0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="wrapUp()[pri:0, instance:com.testcases.DataDrivenExcel@589838eb]" name="wrapUp" is-config="true" duration-ms="524" started-at="2019-11-10T15:01:47Z" finished-at="2019-11-10T15:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrapUp -->
      </class> <!-- com.testcases.DataDrivenExcel -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
